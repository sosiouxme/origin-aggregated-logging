cluster.name: ${CLUSTER_NAME}
script.disable_dynamic: false
#searchguard.key_path: .
#searchguard.auditlog.enabled: true

# If this is true (default is false) then allow all HTTP REST requests from nodes loopback (e.g. localhost)
searchguard.allow_all_from_loopback: false

############################# Search-Guard ################################
#searchguard.check_for_root: false

######################################
# Authentication backend             #
#                                    #
######################################
searchguard.authentication.authentication_backend.impl: com.floragunn.searchguard.authentication.backend.simple.AlwaysSucceedAuthenticationBackend

######################################
# Authorization backend (authorizer) #
#                                    #
######################################
searchguard.authentication.authorizer.impl: com.floragunn.searchguard.authorization.simple.SettingsBasedAuthorizator

######################################
# HTTP authentication method         #
#                                    #
######################################
searchguard.authentication.http_authenticator.impl: com.floragunn.searchguard.authentication.http.proxy.HTTPProxyAuthenticator
searchguard.authentication.proxy.header: X-Proxy-Remote-User
## Array of trusted IP addresses (this is typically your proxy server(s))
searchguard.authentication.proxy.trusted_ips: 127.0.0.1

#####################################
# HTTPS settings                    #
#                                   #
#####################################
# Enable or disable rest layer security (https)
searchguard.ssl.transport.http.enabled: false

##### authorization
"searchguard.authentication.authorization.settingsdb.roles.system:admin": ["root"]
"searchguard.authentication.authorization.settingsdb.roles.system:fluentd": ["fluentd"]
"searchguard.authentication.authorization.settingsdb.roles.system:kibana": ["kibana"]
"searchguard.authentication.authorization.settingsdb.roles.*": ["root"]

##### roles
# Configure the actionrequestfilter to allow or forbid action
searchguard.actionrequestfilter.names: ["readonly", "fluentd", "kibana"]
searchguard.actionrequestfilter.readonly.allowed_actions: ["indices:data/read/*", "*monitor*"]
searchguard.actionrequestfilter.readonly.forbidden_actions: ["cluster:*", "indices:admin*"]

searchguard.actionrequestfilter.fluentd.allowed_actions: ["indices:data/write/*", "indices:admin/create"]
searchguard.actionrequestfilter.kibana.allowed_actions: ["indices:data/read/*", "indices:data/write/.kibana_*", "*monitor*", "indices:admin/read", "indices:admin/mappings/fields/get*"]
